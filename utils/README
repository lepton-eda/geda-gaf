Lepton EDA utilities

* gmk_sym
   Updated by Matthew Ettus, matt@ettus.com

        Jerry's instructions below still work.  There are
        additional features for the first input line.
        See TL16C554AFN.txt for an example of the extended input

   Written by: Jerry O'Keefe, jerryok@pacbell.net

        This is a simple utility to convert comma separated
        descriptions into rectangular gschem symbols.  It should
        be useful for easily creating memory, processors or
        connector style parts. All pin positions are in normal pin
        spacing (300).	Pin styles supported are line, dot-line,
        and clock line. Pins can be placed on all sides of the
        symbol's box. For example to place a dot-line style pin of
        name INPUT at the normal pin 1 position of a IC would be:

                INPUT,1,dot,L,1

        The size of the symbol's box is also in pin spacings. So
        a symbol with 6 inputs and 6 outputs would typically
        require a size of: 3 for width and 7 for height.

        See the included 7474.txt and 8031.txt as example files.

        This utility is not strong on error checking and slotting
        is not supported.

        gmk_sym typical use:

                ./gmk_sym 7474.txt >7474-3.sym

        gmk_sym is installed when make install is run.



* smash_megafile
   Written by: Mike Jarabek, mjarabek@istop.com

        smash_megafile is a C program that will take a viewlogic
        megafile and extract the contents into a directory of the same
        name, with one file representing each element in the library.
        This program should compile without any problems for anyone.
        This program cannot create megafiles, it can just extract all
        the contents. (Useful for say, extracting all the symbols from
        a library...)  Be aware that megafiles from PC versions of
        ViewDraw use PC end of line terminations, it may be necessary
        to use a program like dos2unix to convert the resulting text
        files... before doing useful things with them.

        smash_megafile typical use:

                 ./smash_megafile megafile

        where megafile is the name of a viewlogic megafile whithout
        any extensions.  The file megafile.lib and megafile.tbl must
        exist in the same directory

        smash_megafile is installed when make install is run.


* convert_sym
   Written by: Mike Jarabek, mjarabek@istop.com

        convert_sym converts Viewlogic schematics and symbols into
        geda format.

        This utility should be considered a work in progress.
        Be warned, the program has a few limitations:

                1) Some text spacing may be lost due to the way that I
                   extract the text from the viewlogic records

                2) Arcs in viewlogic are stored implicitly as a record
                   where the arc passes through three points,
                   the conversion from this format to geda's
                   center/radius/start/stop notation is not exact,
                   so some arcs may not render well.

                3) Bubbles are drawn on pins that are negated.	I believe
                   the code is correct, but have not tried all the
                   end cases.

                4) Rotated and mirrored components may not show up correctly,
                   but should be better now, thanks to patches from
                   Thepthai Tabtieng <tabtieng@lsil.com>.


        convert_sym (the C version) typical use:

                convert_sym -s viewlogic_symbol.1 > viewlogic_symbol-1.sym

                convert_sym viewlogic_schematic.1 > viewlogic_schematic-1.sch

        convert_sym is installed when make install is run.

        Thanks to Thepthai Tabtieng <tabtieng@lsil.com> for code to
        support rotated and mirrored components, and a fix for
        component instantiations.


* Sarlacc (consists of sarlacc_schem and sarlacc_sym)
    Written by: Matthew Ettus

    Sarlacc is an OrCAD to gEDA format schematic converter. This software is
    beta, so it still has limitations.  To convert files do the following:

      * Go into ORCAD, load up your schematic, and save it as "SDT IV format".
        All of the versions of ORCAD should be able to do this.  This
        is the old ORCAD 16 bit format.  In this process, your library parts
        will be converted to a new format.  Along the way, there is an
        intermediate format which is all text.  It is probably kept in your
        tmp directory (C:\windows\temp ?), and it has a .src extension.
        Save this file too.
      * To convert schematics type:  sarlacc_schem orcadfile > gedafile.sch
      * To convert symbols type: sarlacc_sym orcadlibrary.src
          This will create individual .sym files for gschem. You will need to
          put them somewhere gschem will find them


* olib
    Written by: Mario Pascucci

    olib is a simple automated converter from OrCAD(tm) v4 (in SDT version
    1.10) parts library (in ASCII dump format, through "decomp" utility)
    to gEDA component definition in .sym format file.


* lepton-refdes_renum
    Dan McMahill

    lepton-refdes_renum reads a gschem schematic file or files and renumbers
    all reference designators.  The reference designators are numbered
    starting with 1 and the old schematic file is replaced by the modified
    schematic file.

    Run the program with no parameters or with --help to see usage
    information.


 * lepton-tragesym
    Werner Hoch

    lepton-tragesym is a symbol creator for gEDA/gaf.  The aim of
    this script is to make it easier (and faster) to create
    symbols for Lepton EDA.

    Program features:

    * create pins and arrange their elements (clocksign, dot, type, pinnumber,
      label)
    * sort pins alphabetical and numerical
    * swap words of pinlabels if wished
    * draw negation lines on the labels
    * rotate pinlabels if wished
    * some syntax check to the input file

    Please see the README.tragesym and ChangeLog.tragesym for more info.
    Be sure to look at the examples in examples/tragesym.  There you will
    find the template.src file referenced in the README.tragesym file.


* pads_backannotate
    Dan McMahill

    A perl program which implements backannotation from Pads PowerPCB
    board layouts to gschem schematics.

    Please see the pads_backannotate.[dvi|html|ps|pdf] documentation for more
    details.


    gsch2pcb
    Bill Wilson

    gsch2pcb is conceptually based on the gschem2pcb shell script
    distributed with gnetlist, but additionally handles multiple
    schematics, handles element file footprints, and removes pc board
    elements corresponding to components deleted from the schematics.
    It also forward annotates component value changes.

    Please see the README.gsch2pcb file for more information.  Also see
    examples/gsch2pcb/project.sample for an example of a project file.


* lepton-archive

Create design archive from a set of schematics and configuration
files including symbols, SPICE source files, etc.  See
lepton-archive(1) for more information.

* lepton-schdiff
    Alan Somers
    This script is used to produce graphical diffs of gschem files.  It
    integrates with Git, Mercurial, and Subversion.  It requires ImageMagick
    to run.  Run lepton-schdiff -h for usage instructions.
